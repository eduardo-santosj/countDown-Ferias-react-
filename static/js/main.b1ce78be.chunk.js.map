{"version":3,"sources":["App.js","serviceWorker.js","index.js","tenor.gif","fogos.gif","mes12.gif"],"names":["App","useState","Days","Hour","Min","Sec","time","settime","vacationStart","Date","useEffect","counter","setTimeout","diffTime","console","log","diffDays","parseInt","difHour","difMin","difSec","className","Fragment","role","aria-label","src","fogos","back","alt","contentStyle","background","color","contentArrowStyle","borderRight","date","iconStyle","href","mes12","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"6SA6GeA,G,MArGH,WAAO,IAAD,EACQC,mBAAS,CACjCC,KAAK,KACLC,KAAK,KACLC,IAAI,KACJC,IAAI,OALY,mBACTC,EADS,KACHC,EADG,KAOXC,EAAgB,IAAIC,KAAK,oBAE/BC,qBAAU,WACTC,EAAQH,KACN,IAIH,IAAMG,EAAU,SAAVA,EAAWH,GAChBI,YAAY,WAEX,IAAIC,EAAWL,EAAgB,IAAIC,KAInC,GAFAK,QAAQC,IAAIF,GAETA,EAAW,EAOb,OANAN,EAAQ,CACPL,KAAK,EACLC,KAAK,EACLC,IAAI,EACJC,IAAK,KAEC,EAGR,IAAMW,EAAWC,SAAUJ,EAAQ,OAC7BK,EAAWD,SAAUJ,EAAQ,MAC7BM,EAAUF,SAAUJ,EAAQ,KAC5BO,EAAUH,SAAUJ,EAAY,KAEtCN,EAAS,CACRL,KAAKc,EACLb,KAAKe,EACLd,IAAIe,EACJd,IAAIe,IAGLT,EAAQH,KACJ,MAGN,OAAiB,OAAdF,EAAKJ,KACC,2CAGN,yBAAKmB,UAAU,OAEF,IAAbf,EAAKD,IACL,6HACA,kBAAC,IAAMiB,SAAP,KACC,0BAAMC,KAAK,MAAMC,aAAW,YAA5B,gFACA,6CAAmBlB,EAAKJ,KAAxB,SACA,8CAAqBI,EAAKH,KAA1B,UACA,gDAAuBG,EAAKF,IAA5B,YACA,iDAAwBE,EAAKD,IAA7B,cAIH,yBAAKoB,IAA6B,IAAvBR,SAASX,EAAKD,KAAaqB,IAAQC,IAAMC,IAAI,KAExD,kBAAC,mBAAD,KACC,kBAAC,0BAAD,CACCP,UAAU,kCACVQ,aAAc,CAAEC,WAAY,kBAAmBC,MAAO,QACtDC,kBAAmB,CAAEC,YAAa,8BAClCC,KAAK,aACLC,UAAW,CAAEL,WAAY,qBAAsBC,MAAO,YAEtD,wBAAIV,UAAU,mCAAd,8BACA,wBAAIA,UAAU,sCAAd,2DACA,6MAEkC,6BAAK,gDAAwB,6BAF/D,6FAEqJ,6BAFrJ,+BAEgL,uBAAGe,KAAK,6CAAR,iBAEhL,uBAAGf,UAAU,UAAUe,KAAK,qLAA5B,+BAED,kBAAC,0BAAD,CACCf,UAAU,kCACVQ,aAAc,CAAEC,WAAY,qBAAsBC,MAAO,QACzDC,kBAAmB,CAAEC,YAAa,iCAClCC,KAAK,aACLC,UAAW,CAAEL,WAAY,kBAAmBC,MAAO,SAEnD,wBAAIV,UAAU,mCAAd,yBACA,wBAAIA,UAAU,sCAAd,uDACA,yBAAKI,IAAKY,IAAOT,IAAI,+BCxFLU,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,kBEnInBC,EAAOC,QAAU,IAA0B,mC,kBCA3CD,EAAOC,QAAU,IAA0B,mC,kBCA3CD,EAAOC,QAAU,IAA0B,oC","file":"static/js/main.b1ce78be.chunk.js","sourcesContent":["import React , { useEffect , useState } from 'react';\nimport './App.css';\nimport back from './tenor.gif';\nimport fogos from './fogos.gif';\nimport mes12 from './mes12.gif';\nimport { VerticalTimeline, VerticalTimelineElement }  from 'react-vertical-timeline-component';\nimport 'react-vertical-timeline-component/style.min.css';\n\nconst App = () => {\n\tconst [ time, settime] = useState({\n\t\tDays:null,\n\t\tHour:null,\n\t\tMin:null,\n\t\tSec:null\n\t});\n\tconst vacationStart = new Date(\"2021-01-16 00:00\");\n\n\tuseEffect(() => {\n\t\tcounter(vacationStart);\n\t}, []);\n\n\t\n\n\tconst counter = (vacationStart) =>{\n\t\tsetTimeout( () => {\n\t\t\n\t\t\tvar diffTime = vacationStart - new Date();\n\n\t\t\tconsole.log(diffTime);\n\n\t\t\tif(diffTime < 0){\n\t\t\t\tsettime({\n\t\t\t\t\tDays:0,\n\t\t\t\t\tHour:0,\n\t\t\t\t\tMin:0,\n\t\t\t\t\tSec :0\n\t\t\t\t});\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst diffDays = parseInt( diffTime / (1000 * 60 * 60 * 24) );\n\t\t\tconst difHour =  parseInt( diffTime / (1000 * 60 * 60 ) );\n\t\t\tconst difMin =  parseInt( diffTime / (1000 * 60 ) );\n\t\t\tconst difSec =  parseInt( diffTime / (1000) );\n\t\t\t\n\t\t\tsettime( {\n\t\t\t\tDays:diffDays,\n\t\t\t\tHour:difHour,\n\t\t\t\tMin:difMin,\n\t\t\t\tSec:difSec\n\t\t\t} );\n\n\t\t\tcounter(vacationStart);\n\t\t  }, 1000);\n\t}\n\t\n\tif(time.Days === null)\n\t  return(<div>calculando</div>);\n\n\treturn (\n    <div className=\"App\">\n\t\t{\n\t\t\t time.Sec === 0?\n\t\t\t\t<h1>&#127881;&#127882;O grande Dia chegou!!&#128112;&#128147;&#129333;&#128149;</h1>:\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<span role=\"img\" aria-label=\"Novinhos\">Por aqui estamos em contagem regressiva &#128112;&#128147;&#129333;</span>\n\t\t\t\t\t<label>em dias da {time.Days } Dias</label>\n\t\t\t\t\t<label>em horas da { time.Hour } horas</label>\n\t\t\t\t\t<label>em minutos da { time.Min } minutos</label>\n\t\t\t\t\t<label>em segundos da { time.Sec } segundos</label>\n\t\t\t\t</React.Fragment>\n\t\t}\n\t\t\n\t\t<img src={ parseInt(time.Sec) === 0 ? fogos : back} alt=\"\" />\n\n\t\t<VerticalTimeline>\n\t\t\t<VerticalTimelineElement\n\t\t\t\tclassName=\"vertical-timeline-element--work\"\n\t\t\t\tcontentStyle={{ background: 'rgb(93, 31, 44)', color: '#fff' }}\n\t\t\t\tcontentArrowStyle={{ borderRight: '7px solid  rgb(93, 31, 44)' }}\n\t\t\t\tdate=\"16/01/2021\"\n\t\t\t\ticonStyle={{ background: 'rgb(234, 130, 117)', color: '#ea8275' }}\n\t\t\t\t>\n\t\t\t\t<h3 className=\"vertical-timeline-element-title\">Aqui será o grande dia.</h3>\n\t\t\t\t<h4 className=\"vertical-timeline-element-subtitle\">O espaço está totalmente reservado para vocês.</h4>\n\t\t\t\t<p>\n\t\t\t\t\tPortanto não tenha vergonha, dance, pule, tire foto, coma e beba a vontade. Iremos ficar felizes com a presença de cada um de vocês.\n\t\t\t\t\tAqui vai um pouco sobre o local: <br/><b>Garden Fest Aruja</b><br/>No endereço: Estr. Esméria Maria Rodrigues, 1000 - Correas, Arujá - SP, 07400-990<br/>para mais informação, <a href=\"https://www.gardenfestaruja.com.br/videos\">clique Aqui.</a>\n\t\t\t\t</p>\n\t\t\t\t<a className=\"agendar\" href=\"https://www.google.com/calendar/render?action=TEMPLATE&text=Casamento&dates=20210116T203000Z/20210117T033000Z&details=texto_aqui&location=Garden+Fest+Arujá&sf=true&output=xml\">Save the Date &#128147;</a> \n\t\t\t</VerticalTimelineElement>\n\t\t\t<VerticalTimelineElement\n\t\t\t\tclassName=\"vertical-timeline-element--work\"\n\t\t\t\tcontentStyle={{ background: 'rgb(234, 130, 117)', color: '#fff' }}\n\t\t\t\tcontentArrowStyle={{ borderRight: '7px solid  rgb(234, 130, 117)' }}\n\t\t\t\tdate=\"16/01/2020\"\n\t\t\t\ticonStyle={{ background: 'rgb(93, 31, 44)', color: '#fff' }}\n\t\t\t\t>\n\t\t\t\t<h3 className=\"vertical-timeline-element-title\">Falta apenas 12 meses</h3>\n\t\t\t\t<h4 className=\"vertical-timeline-element-subtitle\">Jantar para comemorar que falta apenas 12 meses. rs</h4>\n\t\t\t\t<img src={mes12} alt=\"Falta apenas 12 meses\" />\n\t\t\t</VerticalTimelineElement>\n\t\t</VerticalTimeline>\n    </div>\n  );\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/tenor.ebe2c937.gif\";","module.exports = __webpack_public_path__ + \"static/media/fogos.e1caf709.gif\";","module.exports = __webpack_public_path__ + \"static/media/mes12.399d4d51.gif\";"],"sourceRoot":""}